(()=>{"use strict";class t{title;description;dueDate;priority;isOk;constructor(){this.description="",this.title="",this.dueDate="",this.priority=1,this.isOk=!1}set setList(t){this.title=t}get getList(){let t=JSON.parse(localStorage.getItem("library"));null!==t?this.reloadPage(t):t=[]}reloadPage(t){let e=document.querySelector("tbody");t.forEach(((t,s)=>{e.innerHTML+=`<tr ${"read"===t.read?"class=notRead":"class=read"}>\n                                <td>${s+1}</td>\n                                <td>${t.author}</td>\n                                <td>${t.title}</td>\n                                <td>${t.page}</td>\n                                <td ><button class="removeItem" id="removeItem" >remove</button></td>\n                                <td>\n                                <input class='readButtons'  id="+"readButton"  type='checkbox'${"read"===t.read?"checked":""}>\n                                </td>\n                            </tr> \n                            `}))}}class e{todos=[];title;constructor(t){this.title=t}set setList(t){this.title=t}get getList(){let t=JSON.parse(localStorage.getItem("library"));null!==t?this.reloadPage(t):t=[]}static clearRightSideBar(){const t=document.getElementById("taskContentHeaderId");document.getElementById("rightContent").remove(),null!==t&&t.remove()}static createRightSideHeader(t,e,s){t.projects.forEach((t=>{if(t.title===s.target.id){const s=document.createElement("HEADER");s.innerHTML=t.title,s.classList.add("taskContentHeaderCls"),s.setAttribute("id","taskContentHeaderId"),e.appendChild(s)}}))}static setTasksToRightSide(t,e,s,n,a){null!==t&&t.projects.forEach((t=>{if(t.title===a.target.id)for(let a=0;a<t.todos.length;a++){const d=t.todos[a],i=document.createElement("div");i.classList.add("tasks"),i.setAttribute("id",d.title),console.log("setTaskToRightSide qqqqqqqqq",d),i.innerHTML+=`\n                                            <div class="taskDetailCls">\n                                            <input class='isOkButtons'  id="+"isOkButton"  type='radio'${d.isOk?"checked":"false"}>\n                                            </div>\n                                            <div class="taskDetailCls"><p>${d.title}</p></div>\n                                            <div class="taskDetailCls"><p>${d.description}</p></div>\n                                            <div class="taskDetailCls"><p>${d.dueDate}</p></div>\n                                            <div class="taskDetailCls"><p>${d.priority}</p></div>\n                                            <div class="taskDetailCls" id="dueDate"> <p>No Date</p></div>\n                                            <div class="taskDetailCls"> <input type="date" ></input></div>\n                                        `,d.isOk?(n.appendChild(i),e.appendChild(n)):(s.appendChild(i),e.appendChild(s))}}))}static createTaskButtonArea(t){const s=document.createElement("div");s.classList.add("createTaskCls"),s.setAttribute("id","createTaskId"),s.appendChild(e.createTaskButton("+ Add Task","createTaskButton")),console.log("divCreateTask",s),t.appendChild(s)}static addTaskArea(){const t=document.getElementById("createTaskButton");t.addEventListener("click",(s=>{e.openInputTaskArea(),n.canselEvent("newTaskCanselBtn","newTaskInputArea","newTaskCanselBtnCls",t),console.log("add Task Area"),e.addNewTask()}))}static createNewSideBar(t,s,n){null!==t&&e.createRightSideHeader(t,s,n);const a=document.createElement("div");a.classList.add("rightContent"),a.setAttribute("id","rightContent"),s.appendChild(a),e.createTaskButtonArea(a);const d=document.createElement("div");d.classList.add("taskList"),d.setAttribute("id","tasklistId");const i=document.createElement("div");i.classList.add("newTasksCls"),i.setAttribute("id","newTasksId"),d.appendChild(i);const c=document.createElement("div");c.classList.add("newTaskCls"),c.setAttribute("id","oldTasksId"),d.appendChild(c),a.appendChild(d)}static getTasks(t,s){console.log("here is the getTaskButton"),s.addEventListener("click",(s=>{console.log("projects",s.target.id);const n=document.getElementById("rightSide");e.clearRightSideBar(),console.log("clearRightSide is Ok"),e.createNewSideBar(t,n,s),document.getElementById("rightContent");const a=document.getElementById("tasklistId"),d=document.getElementById("newTasksId"),i=document.getElementById("oldTasksId");console.log("rightSideBar",n),e.setTasksToRightSide(t,a,d,i,s),e.addTaskArea()}))}static createTask(t){null!==t&&t.addEventListener("click",(a=>{a.preventDefault(),console.log("here is new Task",a);const d=document.getElementById("createTaskId");e.openInputTaskArea(),n.canselEvent("newTaskCanselBtn","newTaskInputArea","newTaskCanselBtnCls",t),s.addProject(d)}))}static addNewTask(){console.log("Hello from add task button"),document.getElementById("newTaskAddBtn").addEventListener("click",(s=>{if(console.log("add New Task =========",s),s.preventDefault(),!s.target.classList.contains("newTaskAddBtnCls"))return;const n=document.getElementById("newTaskInputTitle"),a=document.getElementById("taskContentHeaderId").innerText,d=new t(n);d.setList=n.value,console.log("new Task ffffffffffffffff",d,"===="),e.setNewTask(d),e.setTasksToLocal(d,a),n.value=""}))}static setTasksToLocal(t,e){const s=JSON.parse(localStorage.getItem("projects"));console.log("Fffffffffffff",t),null!==s?(s.projects.forEach((s=>{s.title===e&&(console.log("Todo ////////",s.todos),s.todos.push(t))})),localStorage.setItem("projects",JSON.stringify(s))):localStorage.setItem("projects",JSON.stringify(project))}static setNewTask(t){const e=document.getElementById("newTasksId"),s=document.createElement("div");s.classList.add("tasks"),s.setAttribute("id",t.title),s.innerHTML+=`\n                   <div class="taskDetailCls">\n                   <input class='isOkButtons'  id="+"isOkButton"  type='radio'${t.isOk?"checked":"false"}>\n                   </div>\n                   <div class="taskDetailCls"><p>${t.title}</p></div>\n                   <div class="taskDetailCls"><p>${t.description}</p></div>\n                   <div class="taskDetailCls"><p>${t.dueDate}</p></div>\n                   <div class="taskDetailCls"><p>${t.priority}</p></div>\n                   <div class="taskDetailCls" id="dueDate"> <p>No Date</p></div>\n                   <div class="taskDetailCls"> <input type="date" ></input></div>\n               `,e.appendChild(s)}static createTaskButton(t,e){const s=document.createElement("BUTTON");return s.innerHTML=t,s.setAttribute("id",`${e}`),s}static openInputTaskArea(){console.log("OPEN INPUT TASK AREA");const t=document.getElementById("createTaskId"),e=document.getElementById("createTaskButton"),s=document.createElement("div");s.classList.add("newProjectAdd"),s.setAttribute("id","newTaskInputArea");const n=document.createElement("div");n.classList.add("inputBtnGroups"),n.setAttribute("id","inputBtnGroupsTasks");const a=document.createElement("div"),d=document.createElement("input");d.setAttribute("id","newTaskInputTitle"),a.setAttribute("id","newTaskInput"),a.appendChild(d);const i=document.createElement("BUTTON");i.setAttribute("id","newTaskAddBtn"),i.classList.add("newTaskAddBtnCls"),i.innerHTML="Add";const c=document.createElement("BUTTON");c.setAttribute("id","newTaskCanselBtn"),c.classList.add("newTaskCanselBtnCls"),c.innerHTML="Cansel",s.appendChild(a),n.appendChild(i),n.appendChild(c),s.appendChild(n),t.appendChild(s),e.style.display="none"}static setTasks(e,s,n){console.log("ad Task current item",e);const a=document.getElementById("taskContentHeaderId");document.getElementById("newTaskAddBtn").addEventListener("click",(d=>{if(d.preventDefault(),!d.target.classList.contains("newTaskAddBtnCls"))return;const i=document.getElementById("newTaskInputTitle"),c=new t;c.setList=i.value,e.projects.forEach((t=>{t.title===a.innerText&&(t.todos.push(c),console.log("todos ",t))})),i.value="";const o=document.createElement("div");o.classList.add("tasks"),o.setAttribute("id",c.title),console.log("element is ok",element.isOk),o.innerHTML+=`\n                    <div class="taskDetailCls">\n                        <input class='isOkButtons'  id="+"isOkButton"  type='radio'${c.isOk?"checked":"false"}>\n                        </div>\n                        <div class="taskDetailCls"><p>${c.title}</p></div>\n                        <div class="taskDetailCls"><p>${c.description}</p></div>\n                        <div class="taskDetailCls"><p>${c.dueDate}</p></div>\n                        <div class="taskDetailCls"><p>${c.priority}</p></div>\n                        <div class="taskDetailCls"> <p>No Date</p></div>\n                        <div class="taskDetailCls"> <input type="date" ></input></div>\n                    `,s.appendChild(o),n.appendChild(s),localStorage.setItem("projects",JSON.stringify(e))}))}}class s{projects=[];constructor(){this.projects}set setList(t){this.projects.push(t)}get getList(){let t=JSON.parse(localStorage.getItem("projects"));return null===t?new s:t}static setProjectsToLocal(t){const e=JSON.parse(localStorage.getItem("projects"));console.log("xxxxxx",t),null!==e?(t.projects.forEach((t=>{e.projects.push(t)})),localStorage.setItem("projects",JSON.stringify(e))):localStorage.setItem("projects",JSON.stringify(t))}static createProject(){const t=document.getElementById("createProjectButton");console.log("here is create project funtion"),null!==t&&t.addEventListener("click",(e=>{e.preventDefault(),console.log("here is new project",e);const a=document.getElementById("projects");console.log("//////////////",a),n.openInputArea(a,"newProjectInputArea","newProjectAddBtn","newProjectCanselBtn","newProjectInputTitle","newProjectInput","inputBtnGroupsProject","newProjectCanselBtnCls","newProjectAddBtnCls",t),n.canselEvent("newProjectCanselBtn","newProjectInputArea","newProjectCanselBtnCls",t),s.addProject(a)}))}static addProject(t){console.log("Hello from add project button"),document.getElementById("newProjectAddBtn").addEventListener("click",(n=>{if(n.preventDefault(),!n.target.classList.contains("newProjectAddBtnCls"))return;const a=document.getElementById("newProjectInputTitle"),d=new s,i=new e(a.value);i.setList=a.value,d.setList=i,console.log("new project",a.value),s.setProjects(a.value,t),console.log("new Project",d),s.setProjectsToLocal(d),a.value=""}))}static setProjects(t,e){const s=document.createElement("div");return s.innerHTML=t,s.classList.add("projectList"),s.setAttribute("id",t),e.appendChild(s),e}setCurrentProjects(t,n){const a=t.getList;null!==a&&a.projects.forEach((t=>{s.setProjects(t.title,n)})),e.getTasks(a,n)}static openInputArea(t,e,s,n,a,d,i,c,o,l){console.log("OPEN PROJECT INPUT AREA",t);const r=document.createElement("div");r.classList.add("newProjectAdd"),r.setAttribute("id",e);const u=document.createElement("div");u.classList.add("inputBtnGroups"),u.setAttribute("id",i);const p=document.createElement("div"),m=document.createElement("input");m.setAttribute("id",a),p.setAttribute("id",d),p.appendChild(m);const k=document.createElement("BUTTON");k.setAttribute("id",s),k.classList.add(o),k.innerHTML="Add";const g=document.createElement("BUTTON");g.setAttribute("id",n),g.classList.add(c),g.innerHTML="Cansel",r.appendChild(p),u.appendChild(k),u.appendChild(g),r.appendChild(u),t.insertBefore(r,t.firstChild),l.style.display="none"}deleteProject(){}updateProject(){}}class n{static createHeader(){const t=document.createElement("HEADER"),e=document.createElement("IMG");return e.setAttribute("src","images/todoListIcon.png"),e.setAttribute("width","204"),e.setAttribute("height","128"),e.setAttribute("alt","Image not found"),t.appendChild(e),t.classList.add("header"),t}static createLeftSideBar(){const t=document.createElement("div");return t.setAttribute("id","leftSide"),t.classList.add("leftSideBar"),t.appendChild(n.timeLine()),t.appendChild(n.createProjectButton("+ New Project","createProjectButton")),t.appendChild(n.projects()),t}static projects(){const t=document.createElement("div"),e=document.createElement("p");return e.setAttribute("id","projectsP"),t.classList.add("projects"),t.setAttribute("id","projects"),e.innerHTML="PROJECTS",t.appendChild(e),t}static createProjectButton(t,e){const s=document.createElement("BUTTON");return s.innerHTML=t,s.setAttribute("id",`${e}`),s}static createCenterBody(){const t=new s;console.log("Hello Dear Center");const e=document.createElement("div"),a=n.createLeftSideBar(),d=n.createRightSideBar();e.setAttribute("id","centerBody"),e.appendChild(a),e.appendChild(d),document.body.appendChild(e);const i=document.getElementById("projects");s.createProject(),console.log("Center projects list",i.getList),t.setCurrentProjects(t,i)}static createRightSideBar(){const t=document.createElement("div");t.setAttribute("id","rightSide"),t.classList.add("rightSideBar");const e=document.createElement("div");return e.classList.add("rightContent"),e.setAttribute("id","rightContent"),e.innerHTML="Assignments",t.appendChild(e),t}static openInputArea(t,e,s,n,a,d,i,c,o,l){console.log("sssssss",t);const r=document.createElement("div");r.classList.add("newProjectAdd"),r.setAttribute("id",e);const u=document.createElement("div");u.classList.add("inputBtnGroups"),u.setAttribute("id",i);const p=document.createElement("div"),m=document.createElement("input");m.setAttribute("id",a),p.setAttribute("id",d),p.appendChild(m);const k=document.createElement("BUTTON");k.setAttribute("id",s),k.classList.add(o),k.innerHTML="Add";const g=document.createElement("BUTTON");g.setAttribute("id",n),g.classList.add(c),g.innerHTML="Cansel",r.appendChild(p),u.appendChild(k),u.appendChild(g),r.appendChild(u),t.insertBefore(r,t.firstChild),l.style.display="none"}static canselEvent(t,e,s,n){const a=document.getElementById(t),d=document.getElementById(e);a.addEventListener("click",(t=>{t.preventDefault(),console.log("here is cansel button",t),t.target.classList.contains(s)&&(d.remove(),n.style.display="block")}))}static timeLine(){const t=document.createElement("div");t.classList.add("timeLine"),t.setAttribute("id","timeLine");const e=document.createElement("div");e.classList.add("nextMonth"),e.setAttribute("id","nextMonth"),e.innerHTML="Next Month";const s=document.createElement("div");s.classList.add("nextSevenDays"),s.setAttribute("id","nextSevenDays"),s.innerHTML="Next 7 Days";const n=document.createElement("div");return n.setAttribute("id","today"),n.classList.add("today"),n.innerHTML="Today",t.appendChild(e),t.appendChild(s),t.appendChild(n),t}static loadPage(){document.body.appendChild(n.createHeader()),n.createCenterBody(),console.log("=================",n)}}n.loadPage()})();